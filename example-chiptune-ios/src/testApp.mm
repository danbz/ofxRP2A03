#include "testApp.h"

//--------------------------------------------------------------
// static variables
//--------------------------------------------------------------

// MIDI note numbers
// NOTE: -1 indicates a rest.
const int testApp::kNoteNumbers[kPolyphonyVoices][kSongLength] = {
  // J.S. Bach - Goldberg Variations: Variation 1
  {
    67,66,67,-1, -1,62,64,66, 67,69,71,73,
    74,73,74,-1, -1,69,71,73, 74,76,78,74,
    79,78,79,-1, -1,78,76,74, 73,76,69,67,
    66,64,62,61, 62,66,57,55, 54,57,50,-1,
    -1,-1,74,72, 74,-1,67,-1, 59,-1,74,-1,
    -1,-1,76,74, 76,-1,69,-1, 60,-1,76,-1,
    -1,-1,78,76, 78,-1,74,-1, 81,-1,72,-1,
    -1,-1,71,-1, -1,67,71,74, 79,74,79,81,
    83,79,74,71, 67,71,74,79, 83,79,78,76,
    81,76,73,69, 66,69,73,76, 81,78,76,74,
    79,74,71,67, 64,67,71,74, 79,78,76,74,
    73,67,64,61, 57,61,64,67, 73,76,74,73,
    74,-1,54,-1, 54,-1,69,-1, 74,-1,78,-1,
    71,-1,55,-1, 55,-1,71,-1, 76,-1,79,-1,
    73,76,69,67, 66,69,74,78, 79,76,74,73,
    78,74,73,71, 69,67,66,64, 62,-1,-1,-1,
    67,66,67,-1, -1,62,64,66, 67,69,71,73,
    74,73,74,-1, -1,69,71,73, 74,76,78,74,
    79,78,79,-1, -1,78,76,74, 73,76,69,67,
    66,64,62,61, 62,66,57,55, 54,57,50,-1,
    -1,-1,74,72, 74,-1,67,-1, 59,-1,74,-1,
    -1,-1,76,74, 76,-1,69,-1, 60,-1,76,-1,
    -1,-1,78,76, 78,-1,74,-1, 81,-1,72,-1,
    -1,-1,71,-1, -1,67,71,74, 79,74,79,81,
    83,79,74,71, 67,71,74,79, 83,79,78,76,
    81,76,73,69, 66,69,73,76, 81,78,76,74,
    79,74,71,67, 64,67,71,74, 79,78,76,74,
    73,67,64,61, 57,61,64,67, 73,76,74,73,
    74,-1,54,-1, 54,-1,69,-1, 74,-1,78,-1,
    71,-1,55,-1, 55,-1,71,-1, 76,-1,79,-1,
    73,76,69,67, 66,69,74,78, 79,76,74,73,
    78,74,73,71, 69,67,66,64, 62,-1,-1,-1,
    78,79,81,-1, -1,83,81,79, 78,76,74,72,
    71,72,74,-1, -1,76,74,72, 71,69,67,66,
    64,68,69,71, 69,64,69,71, 72,69,75,76,
    78,76,75,73, 71,-1,-1,-1, -1,-1,-1,-1,
    -1,75,76,-1, -1,63,64,-1, -1,51,52,-1,
    -1,80,81,-1, -1,68,69,-1, -1,56,57,-1,
    -1,59,60,66, 59,63,64,67, 66,64,63,69,
    67,66,64,63, 64,67,59,57, 55,59,52,-1,
    -1,-1,76,-1, 72,-1,76,-1, 81,-1,69,-1,
    -1,-1,74,-1, 71,-1,74,-1, 79,-1,67,-1,
    72,69,64,60, 57,60,64,69, 72,69,72,76,
    78,72,69,66, 62,66,69,72, 78,72,78,81,
    83,79,74,71, 67,71,74,79, 83,77,83,86,
    76,86,84,76, 74,84,83,74, 72,76,78,79,
    81,72,71,69, 71,74,71,67, 72,69,67,66,
    71,67,66,64, 62,60,59,57, 55,-1,-1,-1,
    78,79,81,-1, -1,83,81,79, 78,76,74,72,
    71,72,74,-1, -1,76,74,72, 71,69,67,66,
    64,68,69,71, 69,64,69,71, 72,69,75,76,
    78,76,75,73, 71,-1,-1,-1, -1,-1,-1,-1,
    -1,75,76,-1, -1,63,64,-1, -1,51,52,-1,
    -1,80,81,-1, -1,68,69,-1, -1,56,57,-1,
    -1,59,60,66, 59,63,64,67, 66,64,63,69,
    67,66,64,63, 64,67,59,57, 55,59,52,-1,
    -1,-1,76,-1, 72,-1,76,-1, 81,-1,69,-1,
    -1,-1,74,-1, 71,-1,74,-1, 79,-1,67,-1,
    72,69,64,60, 57,60,64,69, 72,69,72,76,
    78,72,69,66, 62,66,69,72, 78,72,78,81,
    83,79,74,71, 67,71,74,79, 83,77,83,86,
    76,86,84,76, 74,84,83,74, 72,76,78,79,
    81,72,71,69, 71,74,71,67, 72,69,67,66,
    71,67,66,64, 62,60,59,57, 55,-1,-1,-1
  },
  
  {
    43,-1,59,57, 59,-1,55,-1, 43,-1,55,-1,
    42,-1,54,52, 54,-1,50,-1, 42,-1,50,-1,
    40,-1,52,50, 52,-1,55,-1, 45,-1,61,-1,
    50,-1,54,52, 54,-1,50,-1, 38,-1,-1,48,
    47,45,47,-1, -1,50,52,54, 55,57,59,55,
    48,47,48,-1, -1,52,54,55, 57,59,60,57,
    50,49,50,-1, -1,57,59,60, 62,64,66,62,
    67,66,67,62, 59,62,55,59, 50,55,47,50,
    43,-1,55,-1, 59,-1,55,-1, 43,-1,55,-1,
    42,-1,54,-1, 57,-1,54,-1, 42,-1,54,-1,
    40,-1,52,-1, 55,-1,52,-1, 40,-1,55,-1,
    45,-1,52,-1, 55,-1,52,-1, 45,-1,55,-1,
    54,57,62,66, 69,66,62,57, 54,57,50,54,
    55,59,62,67, 71,67,62,59, 55,59,52,55,
    57,-1,61,-1, 62,57,54,50, 57,-1,45,-1,
    38,50,52,54, 55,57,59,61, 62,-1,-1,-1,
    43,-1,59,57, 59,-1,55,-1, 43,-1,55,-1,
    42,-1,54,52, 54,-1,50,-1, 42,-1,50,-1,
    40,-1,52,50, 52,-1,55,-1, 45,-1,61,-1,
    50,-1,54,52, 54,-1,50,-1, 38,-1,-1,48,
    47,45,47,-1, -1,50,52,54, 55,57,59,55,
    48,47,48,-1, -1,52,54,55, 57,59,60,57,
    50,49,50,-1, -1,57,59,60, 62,64,66,62,
    67,66,67,62, 59,62,55,59, 50,55,47,50,
    43,-1,55,-1, 59,-1,55,-1, 43,-1,55,-1,
    42,-1,54,-1, 57,-1,54,-1, 42,-1,54,-1,
    40,-1,52,-1, 55,-1,52,-1, 40,-1,55,-1,
    45,-1,52,-1, 55,-1,52,-1, 45,-1,55,-1,
    54,57,62,66, 69,66,62,57, 54,57,50,54,
    55,59,62,67, 71,67,62,59, 55,59,52,55,
    57,-1,61,-1, 62,57,54,50, 57,-1,45,-1,
    38,50,52,54, 55,57,59,61, 62,-1,-1,-1,
    38,-1,54,52, 54,-1,50,-1, 38,-1,54,-1,
    43,-1,59,57, 59,-1,55,-1, 43,-1,59,-1,
    48,-1,60,59, 60,-1,54,-1, 57,-1,60,-1,
    57,-1,54,-1, 51,47,51,54, 59,63,66,69,
    67,-1,-1,66, 67,-1,-1,54, 55,-1,-1,47,
    48,-1,-1,71, 72,-1,-1,59, 60,-1,-1,52,
    51,-1,57,-1, 55,-1,46,-1, 47,-1,54,-1,
    52,-1,55,54, 55,-1,52,-1, 40,-1,-1,50,
    48,52,57,60, 64,60,57,52, 48,52,50,48,
    47,50,55,59, 62,59,55,50, 47,50,48,47,
    45,-1,48,-1, 52,-1,55,-1, 54,-1,52,-1,
    50,-1,54,-1, 57,-1,60,-1, 59,-1,57,-1,
    55,-1,59,-1, 62,-1,65,-1, 64,-1,62,-1,
    60,-1,64,-1, 66,-1,68,-1, 69,-1,67,-1,
    66,-1,62,-1, 67,-1,55,-1, 62,-1,50,-1,
    55,43,45,47, 48,50,52,54, 55,-1,-1,-1,
    38,-1,54,52, 54,-1,50,-1, 38,-1,54,-1,
    43,-1,59,57, 59,-1,55,-1, 43,-1,59,-1,
    48,-1,60,59, 60,-1,54,-1, 57,-1,60,-1,
    57,-1,54,-1, 51,47,51,54, 59,63,66,69,
    67,-1,-1,66, 67,-1,-1,54, 55,-1,-1,47,
    48,-1,-1,71, 72,-1,-1,59, 60,-1,-1,52,
    51,-1,57,-1, 55,-1,46,-1, 47,-1,54,-1,
    52,-1,55,54, 55,-1,52,-1, 40,-1,-1,50,
    48,52,57,60, 64,60,57,52, 48,52,50,48,
    47,50,55,59, 62,59,55,50, 47,50,48,47,
    45,-1,48,-1, 52,-1,55,-1, 54,-1,52,-1,
    50,-1,54,-1, 57,-1,60,-1, 59,-1,57,-1,
    55,-1,59,-1, 62,-1,65,-1, 64,-1,62,-1,
    60,-1,64,-1, 66,-1,68,-1, 69,-1,67,-1,
    66,-1,62,-1, 67,-1,55,-1, 62,-1,50,-1,
    55,43,45,47, 48,50,52,54, 55,-1,-1,-1
  }
};

// Preset Program Table:
//   {"WaveForm", "PitchEnvType", "PitchEnvRate",
//    "PitchEnvDepth", "VolumeEnvType, "VolumeEnvRate"}
const int testApp::kPresetTable[kProgramSize][6] = {
  {1, 0, 0, 0, 1, 24},
  {2, 4, 100, 1, 2, 24},
  {0, 1, 100, 2, 1, 24}
};

const ofColor testApp::kColorList[kProgramSize] = {
  ofColor(255, 0, 0),
  ofColor(0, 160, 64),
  ofColor(255, 128, 48)
};

//--------------------------------------------------------------
void testApp::setup() {
	ofSetFrameRate(60);
	ofBackground(191);

  counter_ = 0;
  touch_idx_ = 0;

  for (int i = 0; i < kPolyphonyVoices; ++i) tones_[i] = new ofxRP2A03();
  setProgram();
  
  ofSoundStreamSetup(2, 0, this, kAudioSampleRate, kAudioBufferSize, 4);
  TimerHandler::getInstance().init((Poco::TimerCallback<testApp>
                                    (*this, &testApp::onTimer)));

}

//--------------------------------------------------------------
void testApp::update() {}

//--------------------------------------------------------------
void testApp::draw() {
	int rect_height = ofGetHeight() / kProgramSize;
  int y = 0;
  for (int i = 0; i < kProgramSize; ++i) {
    if (i == touch_idx_) {
      ofFill();
      ofSetColor(kColorList[touch_idx_]);
    } else {
      ofNoFill();
      ofSetColor(63);
    }
    ofRect(0, y, ofGetWidth(), rect_height);
    y += rect_height;
  }
}

//--------------------------------------------------------------
void testApp::exit(){
  TimerHandler::getInstance().deallocate();
  for (int i = 0; i < kPolyphonyVoices; ++i) delete tones_[i];
}

//--------------------------------------------------------------
void testApp::touchDown(ofTouchEventArgs & touch) {
  int rect_height = ofGetHeight() / kProgramSize;
  int touch_idx = touch.y / rect_height;
  if (touch_idx == kProgramSize) touch_idx = kProgramSize - 1;
  touch_idx_ = touch_idx;
  
  setProgram();
}

//--------------------------------------------------------------
void testApp::touchMoved(ofTouchEventArgs & touch) {}

//--------------------------------------------------------------
void testApp::touchUp(ofTouchEventArgs & touch) {}

//--------------------------------------------------------------
void testApp::touchDoubleTap(ofTouchEventArgs & touch) {}

//--------------------------------------------------------------
void testApp::touchCancelled(ofTouchEventArgs & touch) {}

//--------------------------------------------------------------
void testApp::lostFocus() {}

//--------------------------------------------------------------
void testApp::gotFocus() {}

//--------------------------------------------------------------
void testApp::gotMemoryWarning() {}

//--------------------------------------------------------------
void testApp::deviceOrientationChanged(int newOrientation) {}

//--------------------------------------------------------------
void testApp::audioOut(float *output, int buffer_size, int n_channels) {
  // clear buffer
  for (int i = 0; i < buffer_size; ++i) {
    output[i * n_channels] = 0;
    output[i * n_channels + 1] = 0;
  }
  
  for (int i = 0; i < kPolyphonyVoices; ++i) {
    tones_[i]->audioOut(output, buffer_size, n_channels);
  }
}

//--------------------------------------------------------------
void testApp::onTimer(Poco::Timer &timer) {
  TimerHandler& timer_handler = TimerHandler::getInstance();
  if (timer_handler.isNextStepTime()) {
    timer_handler.incrementNextStepTime();
    
    for (int i = 0; i < kPolyphonyVoices; ++i) {
      int note_number = kNoteNumbers[i][counter_];
      if (note_number > 0) {
        tones_[i]->play(note_number);
      }
    }
    
    counter_ = (counter_ + 1) % kSongLength;
  }
}

//--------------------------------------------------------------
void testApp::setProgram() {
  for (int i = 0; i < kPolyphonyVoices; ++i) {
    tones_[i]->setProgram(kPresetTable[touch_idx_]);
  }
}
